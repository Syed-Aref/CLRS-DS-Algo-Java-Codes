#Recursive binary search
import java.util.Scanner;

public class BinarySearch02 {
	int binarySearch(int[] a,int p,int q,int x) {
		if(q>p) 
		{
			int mid = (p + q)/2;
			if(x>=a[p] & x<=a[mid]) 
			{
				if(x==a[p])
					return p;
				else if(x==a[mid])
					return mid;
				else
					return 0+binarySearch(a,p,mid,x);
			}
			else if(x>=a[mid+1] & x<=a[q]) 
			{
				if(x==a[mid+1])
					return mid+1;
				else if(x==a[q])
					return q;
				else
					return 0+binarySearch(a,mid+1,q,x);
			}
			else
				return -1;
		}
		else if(q==p) 
		{
			if(a[p]==x) 
				return p;
			else
				return -1;
		}
		else
			return 0;
		
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		BinarySearch02 b = new BinarySearch02();
		int[] arr = {12,18,25,39,43};
		int z;
		for(z = sc.nextInt();;z=sc.nextInt())
			System.out.println( b.binarySearch(arr, 0, arr.length-1, z) );
	}
}

#Iterative binary search
public class BinarySearchUsingLoop02 {
    static int binarySearch(int[] a,int x)
	{
		int start = 0;
		int end = a.length-1;
		int mid;
		while(start<=end) 
		{
			if(start==end)
			{
				if(a[start]==x)
					return start;
				else
					return -1;
			}
			if(x<a[start] || x>a[end])
				return -1;
		    mid = (start+end)/2;
		    if(a[mid]==x)
		    	return mid;
		    if(x>=a[start] & x<a[mid])
		    {
		    	end = mid-1;
		    }
		    else if(x>a[mid] & x<=a[end])
		    {
		    	start = mid+1;
		    }
		    else
		    	return -1;
		}
		return -1;
	}
    public static void main(String[] args)
    {
    	int[] a = {5,7,9,12,20,21,25,29,31,32,34,40,45,50};
    	System.out.println( binarySearch(a,34) );
    }
}
